import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int migratoryBirds(List<Integer> arr) {
    // Write your code here
        int one=0,two=0,three=0,four=0,five=0;
        
        ArrayList<Integer> list = new ArrayList<>();
        
        for(int i=0;i<arr.size();i++)
        {
            if(arr.get(i)== 1)
                one++;
            else if(arr.get(i)== 2)
                two++;
            else if(arr.get(i)== 3)
                three++;
            else if(arr.get(i)== 4)
                four++;
            else
                five++;
        }
        list.add(one);
        list.add(two);
        list.add(three);
        list.add(four);
        list.add(five);
        
        int max = Collections.max(list);
        int result=0;
       
        
        result = (list.indexOf(max)+1);
        return result;
        
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}

